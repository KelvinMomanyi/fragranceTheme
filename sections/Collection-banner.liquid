<section class="section about" id="about" aria-label="about" data-aos="fade-up">
  <div class="container"> 
    <h2 class="section-title">{{ section.settings.title }}</h2>
    <p class="section-text">{{ section.settings.info }}</p>
  </div>
  
  <div class="about-card">
    <figure class="card-banner img-holder" style="--width: 1380; --height: 550;">
      <video 
        id="promoVideo" 
        width="1170" 
        height="550" 
        class="img-cover" 
        {% if section.settings.video_autoplay %}autoplay{% endif %}
        {% if section.settings.video_loop %}loop{% endif %}
        {% if section.settings.video_muted %}muted{% endif %}
        playsinline
      >
        {% if section.settings.video_url != blank %}
          <source src="{{ section.settings.video_url }}" type="video/mp4">
        {% else %}
          <source src="{{ section.settings.video_file | default: 'Ink.mp4' | asset_url }}" type="video/mp4">
        {% endif %}
        Your browser does not support the video tag.
      </video>
    </figure>

    <div class="box" data-text-position="{{ section.settings.text_position }}">
      {% assign words = section.settings.animation_text | split: ' ' %}
      {% for word in words %}
        <span>{{ word }}</span>
        {% unless forloop.last %}<span>&nbsp;</span>{% endunless %}
      {% endfor %}
    </div>
  </div>
</section>

<style>
  .collection {
    padding-block-start: 0; 
    margin-top: 5%;
  }

  .collection-list {
    display: grid;
    gap: 15px;
  }

  .collection-card {
    background-color: var(--light-gray);
    min-height: 400px;
    padding: 40px;
    padding-block-end: 30px;
    display: flex;
    flex-direction: column;
  }

  .collection-card .card-title {
    margin-block-end: 12px;
  }

  .collection-card .card-text {
    color: var(--black);
    font-size: var(--fs-6);
    font-weight: var(--fs-600);
    margin-block-end: auto;
  }

  .scents {
    font-size: large;
    font-family: var(--ff-roboto);
  }

  .box {
    position: fixed;
    top: {{ section.settings.text_position }};
    left: 50%;
    transform: translate(-50%, -50%);
    white-space: nowrap;
    z-index: 10;
  }

  .box span {
    font-family: "Quicksand", sans-serif;
    font-weight: 400;
    font-style: normal;
    text-shadow: 0px 0px 5px rgba(31, 29, 46, 0.55);
    font-size: 4rem;
    text-transform: uppercase;
    color: rgb(11, 11, 11);
    display: inline-block;
  }

  /* Responsive for larger than 575px screen */
  @media screen and (max-width: 575px) {
    .scents {
      font-size: medium;
    }

    .box {
      top: 70%;
    }

    .box span {
      font-size: 2rem;
    }
  }

  /* Responsive for larger than 768px screen */
  @media screen and (min-width: 768px) {
    .flex-item {
      max-width: calc(50% - 15px);
    }

    .collection-card {
      min-height: 450px;
    }

    .scents {
      font-size: large;
    }
  }

  /* Responsive for larger than 992px screen */
  @media screen and (min-width: 992px) {
    .scrollbar-item {
      min-width: calc(33.33% - 20px);
    }

    .flex-item {
      max-width: calc(33.33% - 20px);
    }

    .collection-list {
      grid-template-columns: repeat(3, 1fr);
      gap: 30px;
    }

    .scents {
      font-size: large;
    }
  }

  /* Responsive for larger than 1200px screen */
  @media screen and (min-width: 1200px) {
    .scrollbar-item {
      min-width: calc(20% - 24px);
    }

    .flex-item {
      max-width: calc(33.33% - 20px);
    }

    .scents {
      font-size: large;
    }
  }
</style>

<script src="https://cdn.jsdelivr.net/npm/scrollmoo@1.0.7/dist/scrollmoo.min.js"></script>
<script>
document.addEventListener("DOMContentLoaded", function () {
  const video = document.getElementById("promoVideo");
  
  const observer = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      if (entry.isIntersecting) {
        video.currentTime = 1;
        video.play();
      } else {
        video.pause();
      }
    });
  }, { threshold: 0.5 });

  observer.observe(video);
});

function initSlowMotionEffect() {
  const boxElement = document.querySelector('.box');
  const spans = document.querySelectorAll('.box span');
  
  if (!boxElement || spans.length === 0) return;
  
  // Get animation settings from section settings
  const animationSpeed = {{ section.settings.animation_speed | default: 1200 }};
  const maxBlur = {{ section.settings.animation_blur | default: 10 }};
  const maxScale = {{ section.settings.animation_scale | default: 3 }};
  
  // Original effect parameters
  let start = -300;
  let end = 300;
  let steps = spans.length;
  let stepSize = (end - start) / (steps - 1);
  
  // Set initial state
  spans.forEach((span, index) => {
    span.style.transition = `all ${animationSpeed}ms cubic-bezier(0.25, 0.46, 0.45, 0.94)`;
    span.style.transform = 'translateX(0%) scale(1)';
    span.style.filter = 'blur(0px)';
    span.style.opacity = '1';
  });
  
  // Create intersection observer
  const boxObserver = new IntersectionObserver((entries) => {
    entries.forEach(entry => {
      const isIntersecting = entry.isIntersecting;
      const rect = entry.boundingClientRect;
      const isComingFromTop = rect.top > 0;
      const isLeavingToTop = rect.bottom < window.innerHeight && !isIntersecting;
      
      spans.forEach((span, index) => {
        const delay = index * 50;
        
        setTimeout(() => {
          if (isIntersecting) {
            span.style.transform = 'translateX(0%) scale(1)';
            span.style.filter = 'blur(0px)';
            span.style.opacity = '1';
          } else {
            const translateX = start + stepSize * index;
            let finalTranslateX;
            
            if (isComingFromTop) {
              finalTranslateX = translateX;
            } else {
              finalTranslateX = -translateX;
            }
            
            span.style.transform = `translateX(${finalTranslateX}%) scale(${maxScale})`;
            span.style.filter = `blur(${maxBlur}px)`;
            span.style.opacity = '0';
          }
        }, delay);
      });
    });
  }, {
    threshold: [0, 0.1, 0.3, 0.7, 1],
    rootMargin: '100px 0px 100px 0px'
  });
  
  boxObserver.observe(boxElement);
  
  // Fine-tuned scroll-based animation
  function updateInViewEffect() {
    const rect = boxElement.getBoundingClientRect();
    const windowHeight = window.innerHeight;
    
    if (rect.top <= windowHeight && rect.bottom >= 0) {
      const elementCenter = rect.top + rect.height / 2;
      const viewportCenter = windowHeight / 2;
      const distanceFromCenter = Math.abs(elementCenter - viewportCenter);
      const maxDistance = windowHeight / 2;
      const centerRatio = 1 - Math.min(distanceFromCenter / maxDistance, 1);
      const effectStrength = 1 - centerRatio;
      
      spans.forEach((span, index) => {
        if (centerRatio > 0.7) {
          span.style.transform = 'translateX(0%) scale(1)';
          span.style.filter = 'blur(0px)';
          span.style.opacity = '1';
        } else if (centerRatio > 0.3) {
          const translateX = (start + stepSize * index) * effectStrength * 0.3;
          const scale = 1 + (effectStrength * 0.5);
          const blur = effectStrength * 3;
          const opacity = 1 - (effectStrength * 0.3);
          
          span.style.transform = `translateX(${translateX}%) scale(${scale})`;
          span.style.filter = `blur(${blur}px)`;
          span.style.opacity = opacity;
        }
      });
    }
  }
  
  // Throttled scroll listener
  let scrollTimeout;
  window.addEventListener('scroll', () => {
    if (scrollTimeout) return;
    
    scrollTimeout = setTimeout(() => {
      updateInViewEffect();
      scrollTimeout = null;
    }, 16);
  });
  
  updateInViewEffect();
}

initSlowMotionEffect();
</script>

{% schema %}
{
  "name": "Collection-Banner",
  "settings": [
    {
      "type": "header",
      "content": "Section Content"
    },
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Unveil Your Essence"
    },
    {
      "type": "textarea",
      "id": "info",
      "label": "Description",
      "default": "When you start with a portrait and search for a pure form, a clear volume, through successive eliminations, you arrive inevitably at the egg. Likewise, starting with the egg and following the same process in reverse, one finishes with the portrait."
    },
    {
      "type": "header",
      "content": "Video Settings"
    },
    {
      "type": "text",
      "id": "video_url",
      "label": "Video URL",
      "default": "https://youtu.be/_9VUPq3SxOc?list=TLGGn1R2QQNDf6owOTEwMjAyNQ",
      "info": "Enter external video URL (e.g., from CDN, YouTube, or cloud storage). Replace default with your video URL."
    },
    {
      "type": "text",
      "id": "video_file",
      "label": "OR Video File Name",
      "default": "Ink.mp4",
      "info": "Upload video to Files in Shopify admin, then enter filename here (e.g., video.mp4). Used only if Video URL is empty."
    },
    {
      "type": "checkbox",
      "id": "video_autoplay",
      "label": "Autoplay Video",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "video_loop",
      "label": "Loop Video",
      "default": true
    },
    {
      "type": "checkbox",
      "id": "video_muted",
      "label": "Mute Video",
      "default": true,
      "info": "Video must be muted for autoplay to work"
    },
    {
      "type": "header",
      "content": "Text Animation Settings"
    },
    {
      "type": "text",
      "id": "animation_text",
      "label": "Animation Text",
      "default": "scent that you can wear",
      "info": "Words will be animated individually (separated by spaces)"
    },
    {
      "type": "select",
      "id": "text_position",
      "label": "Text Position",
      "options": [
        {"value": "40%", "label": "Upper Center"},
        {"value": "50%", "label": "Center"},
        {"value": "60%", "label": "Lower Center"},
        {"value": "70%", "label": "Bottom Third"}
      ],
      "default": "60%"
    },
    {
      "type": "range",
      "id": "animation_speed",
      "label": "Animation Speed (ms)",
      "min": 500,
      "max": 3000,
      "step": 100,
      "default": 1200,
      "info": "Lower = faster animation"
    },
    {
      "type": "range",
      "id": "animation_blur",
      "label": "Maximum Blur (px)",
      "min": 0,
      "max": 20,
      "step": 1,
      "default": 10
    },
    {
      "type": "range",
      "id": "animation_scale",
      "label": "Maximum Scale",
      "min": 1,
      "max": 5,
      "step": 0.5,
      "default": 3,
      "info": "How large text grows when scrolling away"
    },
    {
      "type": "header",
      "content": "Collection Cards (Legacy)"
    },
    {
      "type": "image_picker",
      "id": "image1",
      "label": "Image 1"
    },
    {
      "type": "url",
      "id": "link1",
      "label": "Button URL 1"
    },
    {
      "type": "text",
      "id": "btn_label1",
      "label": "Button Label 1",
      "default": "Shop Now"
    },
    {
      "type": "image_picker",
      "id": "image2",
      "label": "Image 2"
    },
    {
      "type": "text",
      "id": "title2",
      "label": "Title 2",
      "default": "What's New?"
    },
    {
      "type": "text",
      "id": "subtitle2",
      "label": "Subtitle 2",
      "default": "Get the newest kicks"
    },
    {
      "type": "url",
      "id": "link2",
      "label": "Button URL 2"
    },
    {
      "type": "text",
      "id": "btn_label2",
      "label": "Button Label 2",
      "default": "Discover Now"
    },
    {
      "type": "image_picker",
      "id": "image3",
      "label": "Image 3"
    },
    {
      "type": "text",
      "id": "title3",
      "label": "Title 3",
      "default": "Buy 1 Get 1"
    },
    {
      "type": "text",
      "id": "subtitle3",
      "label": "Subtitle 3",
      "default": "Starting at $17.99"
    },
    {
      "type": "url",
      "id": "link3",
      "label": "Button URL 3"
    },
    {
      "type": "text",
      "id": "btn_label3",
      "label": "Button Label 3",
      "default": "Shop Now"
    }
  ],
  "blocks": [],
  "presets": [
    {
      "name": "Collection-Banner"
    }
  ]
}
{% endschema %}