<div class="container" style="padding-top:25px;">
     <section class="section shop" id="shop" aria-label="shop">
          <div class="container">
            
            <div class="title-wrapper">
                  <h2 class="h2 section-title">
                    {% if section.settings.selected_collection != blank %}
                        {{ collections[section.settings.selected_collection].title }}
                    {% else %}
                        {{ collection.title }}
                    {% endif %}
                  </h2>
                <div class="filter-controls"> 
                    <a href="#" class="btn-link filter-btn">
                        {% render 'sorting-filter' %}
                      
                    </a>
                    <a href="#" class="btn-link filter-btn">
                        {% render 'collection-filter' %}
                        
                    </a>
                </div>
            </div>
            
            <div class="collection-container">
                <div class="collection">
                    {% if section.settings.selected_collection != blank %}
                        {% assign selected_collection = collections[section.settings.selected_collection] %}
                        {% for product in selected_collection.products %}
                          <li class="decoration">
                            <div class="product-card">
                              <a href="{{ product.url }}" class="card-banner img-holder has-before" style="--width: 300; --height: 300;">
                                {% if product.featured_image %}
                                  <img src="{{ product.featured_image | img_url: 'large' }}" 
                                    alt="{{ product.featured_image.alt | escape }}" 
                                    class="img-cover" 
                                    width="300" 
                                    height="300" 
                                    loading="lazy">
                                {% else %}
                                 <img src="default-image.jpg" 
                                    alt="No image available" 
                                    class="img-cover" 
                                     width="300" 
                                     height="300" 
                                     loading="lazy">
                                {% endif %}
                             <ul class="card-action-list">
                              <li>
                               <button class="card-action-btn" aria-label="add to cart" title="add to cart">
                                 <ion-icon name="add-outline" aria-hidden="true"></ion-icon>
                               </button>
                             </li>
                             <li>
                             <button class="card-action-btn" aria-label="view cart" title="view cart">
                             <ion-icon name="bag-handle-outline" aria-hidden="true"></ion-icon>
                         </button>
                       </li>
                       <li>
                         <button class="card-action-btn" aria-label="add to wishlist" title="add to wishlist">
                           <ion-icon name="heart-outline" aria-hidden="true"></ion-icon>
                         </button>
                       </li>
                     </ul>
                     {% if product.compare_at_price > product.price %}
                     <ul class="badge-list">
                       <li>
                         <div class="badge orange">Sale</div>
                       </li>
                       <li>
                         <div class="badge cyan">
                           10%
                         </div>
                       </li>
                     </ul>
                     {% endif %}
                   </a>
                        <div class="card-content">
                           <h3 class="h3">
                             <a href="{{ product.url }}" class="card-title">{{ product.title }}</a>
                           </h3>
                            <div class="card-price">
                             {% if product.compare_at_price > product.price %}
                               <del class="del">{{ product.compare_at_price | money }}</del>
                            {% endif %}
                               <data class="price" value="{{ product.price }}">{{ product.price | money }}</data>
                             </div>
                            </div>
                           </div>
                          </li>
                        {% endfor %}
                    {% else %}
                        {% for product in collection.products   %}
                          <li class="decoration">
                            <div class="product-card">
                              <a href="{{ product.url }}" class="card-banner img-holder has-before" style="--width: 300; --height: 300;">
                                {% if product.featured_image %}
                                  <img src="{{ product.featured_image | img_url: 'large' }}" 
                                    alt="{{ product.featured_image.alt | escape }}" 
                                    class="img-cover" 
                                    width="300" 
                                    height="300" 
                                    loading="lazy">
                                {% else %}
                                 <img src="default-image.jpg" 
                                    alt="No image available" 
                                    class="img-cover" 
                                     width="300" 
                                     height="300" 
                                     loading="lazy">
                                {% endif %}
                             <ul class="card-action-list">
                              <li>
                               <button class="card-action-btn" aria-label="add to cart" title="add to cart">
                                 <ion-icon name="add-outline" aria-hidden="true"></ion-icon>
                               </button>
                             </li>
                             <li>
                             <button class="card-action-btn" aria-label="view cart" title="view cart">
                             <ion-icon name="bag-handle-outline" aria-hidden="true"></ion-icon>
                         </button>
                       </li>
                       <li>
                         <button class="card-action-btn" aria-label="add to wishlist" title="add to wishlist">
                           <ion-icon name="heart-outline" aria-hidden="true"></ion-icon>
                         </button>
                       </li>
                     </ul>
                     {% if product.compare_at_price > product.price %}
                     <ul class="badge-list">
                       <li>
                         <div class="badge orange">Sale</div>
                       </li>
                       <li>
                         <div class="badge cyan">
                           10%
                         </div>
                       </li>
                     </ul>
                     {% endif %}
                   </a>
                        <div class="card-content">
                           <h3 class="h3">
                             <a href="{{ product.url }}" class="card-title">{{ product.title }}</a>
                           </h3>
                            <div class="card-price">
                             {% if product.compare_at_price > product.price %}
                               <del class="del">{{ product.compare_at_price | money }}</del>
                            {% endif %}
                               <data class="price" value="{{ product.price }}">{{ product.price | money }}</data>
                             </div>
                            </div>
                           </div>
                          </li>
                        {% endfor %}
                    {% endif %}
                       
            
              </div>
            </div>
          </div>
      </section> 
</div>  
 <style>
    .hero-small {
        min-height: 30vh;
    }
    
    .collection-container {
        box-sizing: border-box;
    }

    .collection {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
    }

    @media (min-width: 1200px) {
        .collection {
            grid-template-columns: repeat(5, 1fr);
        }
    }
    
    @media (min-width: 900px) and (max-width: 1199px) {
        .collection {
            grid-template-columns: repeat(4, 1fr);
        }
    }
    
    @media (min-width: 750px) and (max-width: 899px) {
        .collection {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    @media (min-width: 575px) and (max-width:750px) {
        .collection {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    .card {
        background-color: #fff;
        border-radius: 10px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        overflow: hidden;
        opacity: 0;
        transform: translateY(50px);
        transition: opacity 0.6s ease, transform 0.6s ease;
    }
    
    .card.in-view {
        opacity: 1;
        transform: translateY(0);
    }
    
    .card img {
        width: 100%;
        height: auto;
    }
    
    .card-content {
        padding: 20px;
    }
    
    .card h3 {
        margin: 0 0 10px;
    }
    
    .card p {
        margin: 0;
        color: #666;
    }

    /* New Styles for Title Wrapper and Filter Controls */
    .title-wrapper {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 2rem;
        gap: 1.5rem;
        flex-wrap: wrap;
    }

    .filter-controls {
        display: flex;
        align-items: center;
        gap: 1rem;
        z-index: 5;
    }

    .filter-btn {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.75rem 1.25rem;
        transition: all 0.3s ease;
        text-decoration: none;
        color: inherit;
        font-size: 0.95rem;
    }

    .filter-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

    .filter-btn ion-icon {
        font-size: 1.1rem;
    }

    @media (max-width: 768px) {
        .title-wrapper {
            flex-direction: column;
            align-items: flex-start;
        }

        .filter-controls {
            width: 100%;
            justify-content: flex-start;
        }

        .filter-btn {
            flex: 1;
            justify-content: center;
        }
    }

    @media (max-width: 480px) {
        .filter-controls {
            flex-direction: column;
            width: 100%;
        }

        .filter-btn {
            width: 100%;
        }
    }
</style>     
<script>
    function fetchCart() {
      fetch('/cart.js')
        .then(response => response.json())
        .then(cart => {
          updateCartUI(cart);
        })
        .catch(error => console.error('Error-fetching cart:', error));
    }

    const currencySymbol = "{{ shop.currency | escape }}"; 
    function updateCartUI(cart) {
      var cartContent = document.getElementById('cart-content');
      cartContent.innerHTML = '';
      
      if (cart.item_count > 0) {
        var cartHTML = `
        <div style="display: flex; flex-direction: column;">
          <h1>Cart</h1>
          <form action="/cart" method="post" novalidate>`;
        let subtotal = 0;
        cart.items.forEach(function(item, index) {
          const itemPrice = item.price / 100;
          const initialTotalPrice = itemPrice * item.quantity;
          subtotal += initialTotalPrice;
          const safeItemId = `item_${item.key.replace(/[^a-zA-Z0-9_-]/g, '')}`;

          cartHTML += `
                      <div style="display:flex;"  id="${safeItemId}">
                          <div style="flex:1; display:flex; align-items:center; justify-content:center;">
                          <a href="${item.url}">
                              <img src="${item.image}" alt="${item.title}" class="img-cover" width="480" height="640" loading="lazy">
                            </a>
                          </div>
                          <div style="flex:1; display:flex; align-items:center; justify-content:center; flex-direction:column;" >
                            <td>
                              <a href="${item.url}">${item.product_title}</a>
                                ${item.price}
                              <a href="#" class="remove-item" data-line="${index + 1}" data-key="${item.key}" style="color: red;">Remove</a>
                              
                            </td>
                            <td id="price_${item.key}">
                              ${currencySymbol}${initialTotalPrice.toFixed(2)}
                            </td>
                            <div>
                                <p>Unit Price: ${currencySymbol}${itemPrice.toFixed(2)}</p>
                                <p id="line_price_${item.key}">Total: ${currencySymbol}${initialTotalPrice.toFixed(2)}</p>
                            </div>
                            <td>
                              <input type="number" name="updates[]" id="updates_${item.key}" value="${item.quantity}" min="0">
                            </td>
                            <td>
                              {% if item.original_line_price != item.line_price %}{{ item.original_line_price | money }}{% endif %}
                              {{ item.line_price | money }}
                              {% for discount in item.discounts %}{{ discount.title }}{% endfor %}
                          </td>
                          <div class="quantity-selector">
                            <button type="button" class="decrement" id="decrement_${item.key}">-</button>
                            <span id="quantity_${item.key}">${item.quantity}</span>
                            <button type="button" class="increment" id="increment_${item.key}">+</button>
                          </div> 
                          </div>
                  </div>
          `;
        });
    
        cartHTML += `
          <div>
            <p id="subtotal">Subtotal: ${currencySymbol}${subtotal.toFixed(2)}</p>
            <button type="submit" name="update">Update</button>
            <button type="submit" name="checkout" class="btn btn-primary">Checkout</button>
          </div>
        </form>
      </div>`; 

      cartContent.innerHTML = cartHTML;

    cart.items.forEach(function(item, index) {
      const decrementButton = document.getElementById(`decrement_${item.key}`);
      const incrementButton = document.getElementById(`increment_${item.key}`);
      const quantityDisplay = document.getElementById(`quantity_${item.key}`);
      const quantityInput = document.getElementById(`updates_${item.key}`);
      const linePriceDisplay = document.getElementById(`line_price_${item.key}`);
      const subtotalDisplay = document.getElementById('subtotal');
      const safeItemId = `item_${item.key.replace(/[^a-zA-Z0-9_-]/g, '')}`;

      function updatePriceAndQuantity(newQuantity) {
        const newLinePrice = (item.price * newQuantity) / 100;
        quantityDisplay.textContent = newQuantity;
        quantityInput.value = newQuantity;
        linePriceDisplay.textContent = `Total: ${currencySymbol}${newLinePrice.toFixed(2)}`;

        subtotal = subtotal - (item.price * item.quantity) / 100 + newLinePrice;
        subtotalDisplay.textContent = `Subtotal: ${currencySymbol}${subtotal.toFixed(2)}`;

        item.quantity = newQuantity;
      }

      decrementButton.addEventListener('click', function() {
        let currentQuantity = parseInt(quantityInput.value, 10);
        if (currentQuantity > 1) {
          currentQuantity--;
          updatePriceAndQuantity(currentQuantity);
        }
      });

      incrementButton.addEventListener('click', function() {
        let currentQuantity = parseInt(quantityInput.value, 10);
        currentQuantity++;
        updatePriceAndQuantity(currentQuantity);
      });

      const removeButton = document.querySelector(`.remove-item[data-key="${item.key}"]`);
      
      removeButton.addEventListener('click', function(e) {
        e.preventDefault();
        removeCartItem(safeItemId, index +1);
      });
    });
      } else {
        cartContent.innerHTML = '<h2>Cart</h2><p>Cart is empty</p>';
      }

      function removeCartItem(safeItemId, line) {
          console.log(`Attempting to remove item with ID: ${safeItemId}`);
          const itemElement = document.getElementById(safeItemId);
          if (itemElement) {
            fetch(`/cart/change.js`, {
              method: 'POST',
              headers: {
                'Content-Type': 'application/json',
                'X-Requested-With': 'XMLHttpRequest'
              },
              body: JSON.stringify({
                line: line,
                quantity: 0
              })
            })
            .then(response => response.json())
            .then(updatedCart => {
              itemElement.remove();
              updateSubtotal(updatedCart);
            })
            .catch(error => {
              console.error('Error removing item from cart:', error);
            });
          } else {
            console.error(`Element with ID ${safeItemId} not found.`);
          }
      }
      
      function updateSubtotal(updatedCart) {
        let subtotal = 0;
        updatedCart.items.forEach(item => {
          subtotal += (item.price * item.quantity) / 100;
        });
        document.getElementById('subtotal').textContent = `Subtotal: ${currencySymbol}${subtotal.toFixed(2)}`;
      }
    }

    function submitAddToCartForm(formElement) {
      let formData = new FormData(formElement);
      var myModal2 = document.getElementById('myModal2');
      var loader = myModal2.querySelector('#loader');
      var cartContent = myModal2.querySelector('#cart-content');
    
      myModal2.style.display = 'block';
      loader.style.display = 'block';
      cartContent.style.display = 'none';
    
      fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        body: formData
      })
      .then(response => response.json())
      .then(data => {     
        openCart(); 
        fetchCart();
        setTimeout(function() {
          loader.style.display = 'none';
          cartContent.style.display = 'block';
        }, 100); 
      })
      .catch((error) => {
        console.error('Error:', error);
      });
    
      return false;
    }
</script>
      
 {% schema %}
      {
        "name": "main-collection",
        "settings": [
            {
             "type": "collection",
             "id": "selected_collection",
             "label": "Select Collection"
           }
        ],
        "blocks": [],
        "presets": [
          {
            "name": "main-collection"
          }
        ]
      }
 {% endschema %}